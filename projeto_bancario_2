
import textwrap


def menu():
    menu = '''

-------------------

[d]\tDepósito
[s]\tSaque
[e]\tExtrato
[nu]\tNovo usuário
[nc]\tNava conta
[lc]\tListar contas
[q]\tSair

--------------------

==>'''
    #return input(textwrap(menu))
    return input(menu)



def deposito(saldo, valor, extrato, /):
    if valor > 0:
        saldo += valor
        extrato += f'Depósito: R$ {valor:.2f}\n'
    else:
        print("Operação falhou! O valor informado é inválido.")
    return saldo, extrato



def sacar(*, saldo, valor, extrato, limite, numero_saques, limite_saques):
    excedeu_limite = valor > limite
    excedeu_saques = numero_saques > limite_saques
    excedeu_saldo = valor > saldo
    if excedeu_limite:
        print("Operação falhou! O valor do saque excede o limite.")
    elif excedeu_saques:
        print("Operação falhou! Número máximo de saques excedido.")
    elif excedeu_saldo:
        print("Operação falhou! Você não tem saldo suficiente.")
    elif valor > 0:
        saldo -= valor
        extrato += f'Saque: R$ {valor:.2f}\n'
        numero_saques += 1
    else:
        print("Operação falhou! O valor informado é inválido.")
    return saldo, extrato



def exibir_extrato(saldo, /, *, extrato):
    print("\n================ EXTRATO ================")
    print("Não foram realizadas movimentações." if not extrato else extrato)
    print(f"\nSaldo: R$ {saldo:.2f}")
    print("==========================================")



def criar_usuario(usuarios):
    cpf = input('informe o cpf (somente números): ')
    usuario = filtrar_usuario(cpf, usuarios)
    if usuario:
        print('\nja existe usuário com esse CPF!')
        return
    nome = input('informe o nome completo: ')
    data_nascimento = input('informe a data de nascimento (dd-mm-aaaa): ')
    endereco = input('informe o endereço (logradouro, nro - bairro - cidade/sigla estado): ')
    usuarios.append({'nome': nome, 'data_nascimento': data_nascimento, 'cpf': cpf, 'endereco': endereco})
    print('Usuário criado com sucesso!')



def filtrar_usuario(cpf, usuarios):
    usuarios_filtados = [usuario for usuario in usuarios if usuario['cpf'] == cpf]
    return usuarios_filtados[0] if usuarios_filtados else None



def criar_conta(agencia, numero_conta, usuarios):
    cpf = input('informe o CPF do usuário: ')
    usuario = filtrar_usuario(cpf, usuarios)
    if usuario:
        print('\nConta criada com sucesso!')
        return {'agencia':agencia, 'numero_conta':numero_conta, 'usuario': usuario}
    print('\nUsuario não encontrado, fluxo de criação de conta encerrado!')



def listar_contas(contas):
    for conta in contas:
        linha = f"""\
            Agencia:\t{conta['agencia']}
            C/C:\t\t{conta['numero_conta]']}
            Titular:\{conta['usuario']['nome']}
            """
        print("=" * 100)
        print(textwrap.dedent(linha))


def raiz():
    #Declaração das variaveis
    saldo = 0
    extrato = ""
    limite = 500
    numero_saque = 0
    LIMITE_SAQUE = 3
    usuarios = []
    contas = []
    AGENCIA = "0001"

    #laço de repetisao
    while True: 
        #função deposito
        opcao = menu()
        if opcao == "d":
           valor = float(input("Informe o valor do depósito: "))
           saldo, extrato = deposito(saldo, valor, extrato)
           
        #função saque
        
        elif opcao == "s":
            valor = float(input("Informe o valor do saque: "))
            saldo, extrato = sacar(
                saldo=saldo,
                valor=valor,
                extrato=extrato,
                limite=limite,
                numero_saque=numero_saque,
                limite_saques=LIMITE_SAQUE,
            )        
        
        #funçao extrato

        elif opcao == "e":
            exibir_extrato(saldo, extrato=extrato)
        
        elif opcao == "nu":
            criar_usuario(usuarios)
        
        elif opcao == "nc":
            numero_conta = len(contas) + 1
            conta = criar_conta(AGENCIA, numero_conta, usuarios)
            if conta:
                contas.append(conta)
        
        elif opcao == "lc":
            listar_contas(contas)

           
    #funçao sair

        elif opcao == "q":
            break
    
    #mensagem final

    else:
            print("Operação inválida, por favor selecione novamente a operação desejada.")


raiz()
